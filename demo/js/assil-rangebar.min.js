function getRectUsing$Offset(n){if(!n||n.x!=undefined&&n.y!=undefined&&n.w!=undefined&&n.h!=undefined)return n;var t=$(n).offset();return{x:t.left,y:t.top,w:$(n).width(),h:$(n).height()}}function getRectUsing$Position(n){if(!n||n.x!=undefined&&n.y!=undefined&&n.w!=undefined&&n.h!=undefined)return n;var t=$(n).position();return{x:t.left,y:t.top,w:$(n).width(),h:$(n).height()}}function isOverlapRect(n,t){var i={isOverlapRight:n.x+n.w>=t.x&&n.x<=t.x,isOverlapLeft:n.x<=t.x+t.w&&n.x>=t.x,isOverlapBottom:n.y+n.h>t.y&&n.y<=t.y,isOverlapTop:n.y<=t.y+t.h&&n.y>=t.y};return i.isOverlaped=i.isOverlapLeft||i.isOverlapRight||i.isOverlapTop||i.isOverlapBottom,i}function isOverlapXRect(n,t){var i={isOverlapRight:n.x+n.w>=t.x&&n.x<=t.x,isOverlapLeft:n.x<=t.x+t.w&&n.x>=t.x};return i.isOverlaped=i.isOverlapLeft||i.isOverlapRight,i}function isOverlapYRect(n,t){var i={isOverlapBottom:n.y+n.h>=t.y&&n.y<=t.y,isOverlapTop:n.y<=t.y+t.h&&n.y>=t.y};return i.isOverlaped=i.isOverlapTop||i.isOverlapBottom,i}var assil={debgug:!1};(function(n){function u(t,i){var o=i.size?getRectUsing$Offset:getRectUsing$Position,r=n(t.target),s=r.data("range"),f=n(t.target).parent(),l=o(f),u=o(r),a=r.data("ui-position")||i.position,h={x:i.position.left-a.left,y:i.position.top-a.top},c,e;assil.debgug&&console.log("input ui.position:"+JSON.stringify(i.position));assil.debgug&&console.log("input mouseOffset:"+JSON.stringify(h));i.size?(u.w=i.size.width+h.x,i.position.left+i.size.width>l.w&&(i.size.width=l.w-i.position.left),i.position.left=i.position.left<0?0:i.position.left):u.x=i.position.left+h.x;assil.debgug&&console.log("   range position:"+JSON.stringify(u));c=[];r.siblings().each(function(){this_rect=o(this);this_rect.$el=this;c.push(this_rect)});e=n(u).overlapsX(c);e.length>1&&s.canOverlap?r.addClass("overlaped"):e.length==1&&s.canOverlap&&r.removeClass("overlaped");e.length>0&&!s.canOverlap&&(n.each(e,function(){var e=this,h=n(e.obstacle.$el),c=h.data("range"),s;if(!c)return!0;if(c.canOverlap)return h.addClass("overlaped"),!0;if(f.trigger("overlap",[t,i,e,f,r,e.obstacle]),s=o(e.obstacle),assil.debgug&&console.log("    obstacle rect:"+JSON.stringify(s)),i.size)return e.overlap.isOverlapLeft?(i.position.left=s.x+s.w,i.size.width=i.originalPosition.left+i.originalSize.width-i.position.left):e.overlap.isOverlapRight&&(i.size.width=s.x-u.x),!0;e.overlap.isOverlapLeft?i.position.left=s.x+s.w:e.overlap.isOverlapRight&&(i.position.left=s.x-u.w)}),f.trigger("change",[t,i,f,r]),assil.debgug&&console.log("      source rect:"+JSON.stringify(u)));i.size?assil.debgug&&console.log("result          :"+JSON.stringify({x:i.position.left,y:i.position.top,x:i.position.left,w:i.size.width,h:i.size.height})):assil.debgug&&console.log("result          :"+JSON.stringify(i.position.left))}function f(n,i){u(n,i);t(n,i)}function e(i,r){t(i,r);n(i.target).addClass("dragging")}function o(n,i){u(n,i);t(n,i)}function s(i,r){t(i,r);n(i.target).removeClass("dragging")}function h(t){t.stopPropagation();t.preventDefault();var i=n(this),r=i.parent(),u=r.data("rangebar");t.which===2&&u.allowDelete&&(i.data("deleteConfirm")?(r.removeRange(i.data("range").id),clearTimeout($el.data("deleteTimeout"))):(i.addClass("delete-confirm"),i.data("deleteConfirm",!0),this.deleteTimeout=setTimeout(function(){i.removeClass("delete-confirm");i.data("deleteConfirm",!1)},u.deleteTimeout)))}function t(t,u){var f=n(t.target),e=f.data("range"),o=f.parent(),s=o.data("assilRangebar").options,h=s.max-s.min,c=o.width(),l=u?u.position.left:f.offset().left;e=n.fn.extend(e,{start:r(h,i(c,l)),end:r(h,i(c,l+(u&&u.size?u.size.width:f.width())))});f.height(o.height());f.data("range",e);n(".range-label",f).text(s.label(f,e))}function c(n,t,u){return{left:r(t,i(n,u.start)),right:r(t,i(n,u.end))}}function i(n,t){return t*100/n}function r(n,t){return n*t/100}n.widget("assil.rangebar",{options:{defaultRange:{start:3,end:9,disabled:!1,css:{range:"",label:""},canOverlap:!1},min:0,max:100,ranges:[],label:function(n){return parseInt(n.start)+"-"+parseInt(n.end)},allowDelete:!0,deleteTimeout:3e3},_create:function(){var t=this;t.element.addClass("range-bar").disableSelection();t.setRanges(t.options.ranges);t.element.resize(function(){var i=n(t.element);n.each(i.children(),function(){var i=n(this);if(range=i.data("range"),!range)return!0;t.updateRangeUI(i)})})},_destroy:function(){},addRange:function(t){var r=this.options;t=n.fn.extend({},r.defaultRange,t);var c=r.max-r.min,i=n("<div class='range'>").data("range",t),u=i.append("<div class='range-label'>&nbsp;<\/div>");if(this.element.append(i),t.css&&(i.addClass(t.css.range),u.addClass(t.css.label)),t.disabled)return i.addClass("disabled"),!0;i.draggable({containment:this.element,scroll:!1,axis:"x",handle:".range-label",start:e,drag:o,stop:s}).resizable({containment:this.element,handles:"e, w",resize:f});i.on("click",h);return this.updateRangeUI(i),i},removeRange:function(t){var i=this.element.chiden();i.each(function(){var i=n(this),r=i.data("range");return r.id!=t?!0:($el.remove(),!1)})},setRanges:function(t){var i=this;n(i.element.children()).remove();n.each(t,function(){i.addRange(this)})},updateRangeUI:function(t){var f=this.options,r=n(this.element),u=n(t).data("range"),i=this.getRelativeUIRectFromRange(u);t.offset({left:i.x+r.offset().left,top:i.y+r.offset().top});t.width(i.w);t.height(i.h);n(".range-label",t).text(f.label(t,u));assil.debgug&&console.log("UI range rect after change:"+JSON.stringify(getRectUsing$Position(t)))},getRelativeUIRectFromRange:function(t){var r=n(this.element),f=this.options.max-this.options.min,i=c(f,r.width(),t),u={x:i.left,y:0,w:i.right-i.left,h:r.height()};return assil.debgug&&console.log("relative rect of : "+JSON.stringify(t)),assil.debgug&&console.log("point:"+JSON.stringify(i)),assil.debgug&&console.log("relative rect:"+JSON.stringify(u)),u}})})(jQuery),function(n){n.fn.measureRects=function(){var n=[];return this.each(function(){n.push(getRect(this))}),n};n.fn.overlaps=function(t,i,r){try{var u=[],f=r||getRectUsing$Offset,e=i||isOverlapRect;return this.each(function(){var i=this,r=f(i);n(t).each(function(){var n=this,o=f(n),t=e(r,o);t.isOverlaped&&u.push({src:i,obstacle:n,overlap:t})})}),u}catch(o){console.log(o)}};n.fn.overlapsX=function(n,t){return this.overlaps(n,isOverlapXRect,t)};n.fn.overlapsY=function(n,t){return this.overlaps(obj,isOverlapYRect,t)}}(jQuery);