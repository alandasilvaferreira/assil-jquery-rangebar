function getRect(n){if(!n||n.x&&n.y&&n.w&&n.h)return n;var t=$(n).offset();return{x:t.left,y:t.top,w:$(n).width(),h:$(n).height()}}function isOverlapRect(n,t){var i={isOverlapRight:n.x+n.w>=t.x&&n.x<=t.x,isOverlapLeft:n.x<=t.x+t.w&&n.x>=t.x,isOverlapBottom:n.y+n.h>t.y&&n.y<=t.y,isOverlapTop:n.y<=t.y+t.h&&n.y>=t.y};return i.isOverlaped=i.isOverlapLeft||i.isOverlapRight||i.isOverlapTop||i.isOverlapBottom,i}function isOverlapXRect(n,t){var i={isOverlapRight:n.x+n.w>=t.x&&n.x<=t.x,isOverlapLeft:n.x<=t.x+t.w&&n.x>=t.x};return i.isOverlaped=i.isOverlapLeft||i.isOverlapRight,i}function isOverlapYRect(n,t){var i={isOverlapBottom:n.y+n.h>=t.y&&n.y<=t.y,isOverlapTop:n.y<=t.y+t.h&&n.y>=t.y};return i.isOverlaped=i.isOverlapTop||i.isOverlapBottom,i}(function(n){function f(i,r){i.each(function(){var u=i.data("rangebar"),f=u.max-u.min;n.each(r,function(r,u){var e=n("<div class='range'>").data("range",u),a=e.append("<div class='range-label'>"),c;if(i.append(e),c=l(f,i.width(),u),e.offset({left:c.left,top:i.offset().top}),e.width(c.right-c.left),t({target:e}),u.disabled)return e.addClass("disabled"),!0;e.resizable({containment:i,handles:"e, w",resize:o});e.draggable({containment:i,scroll:!1,axis:"x",handle:".range-label",drag:s});e.on("click",h)})})}function e(t,i){if(!i)return null;var r;i.start!=null||i.end!=null||(r=n(i));r.remove()}function i(t,i){var f=n(t.target),h=n(t.target).parent(),s=getRect(h),e=getRect(f),o,u,r;i.size&&(i.position.left+i.size.width>s.w&&(i.size.width=s.w-i.position.left),i.position.left=i.position.left<0?0:i.position.left);o=f.overlapsX(f.siblings());o.length>0&&(u=o[0],r=getRect(u.obstacle),u.overlap.isOverlapLeft?i.size?(i.position.left=r.x+r.w,i.size.width=i.originalPosition.left+i.originalSize.width+1-i.position.left):i.position.left=r.x+r.w+1:u.overlap.isOverlapRight&&(i.size?i.size.width=r.x-(e.x+1):i.position.left=r.x-(e.w+1)),console.log("overlaped on "+(u.overlap.isOverlapLeft?"left":"right")+" of "+f.data("range").id),console.log("source rect:"+JSON.stringify(e)),console.log("obstacle rect:"+JSON.stringify(r)));console.log("result:"+JSON.stringify(i.position))}function o(n,r){i(n,r);t(n,r)}function s(n,r){i(n,r);t(n,r)}function h(t){t.stopPropagation();t.preventDefault();var i=n(this),r=i.parent(),u=r.data("rangebar");t.which===2&&u.allowDelete&&(i.data("deleteConfirm")?(e(r,this),clearTimeout(i.data("deleteTimeout"))):(i.addClass("delete-confirm"),i.data("deleteConfirm",!0),this.deleteTimeout=setTimeout(function(){i.removeClass("delete-confirm");i.data("deleteConfirm",!1)},u.deleteTimeout)))}function c(t){var i=n(t.target)}function t(t,i){var f=n(t.target),e=f.data("range"),o=f.parent(),s=o.data("rangebar"),h=s.max-s.min,c=o.width(),l=i?i.position.left:f.offset().left;e=Object.assign(e,{start:u(h,r(c,l)),end:u(h,r(c,l+(i&&i.size?i.size.width:f.width())))});f.height(o.height());f.data("range",e);n(".range-label",f).text(s.label(e))}function l(n,t,i){return{left:u(t,r(n,i.start)),right:u(t,r(n,i.end))}}function r(n,t){return t*100/n}function u(n,t){return n*t/100}n.fn.rangeBar=function(t){var i=n.extend({},n.fn.rangeBar.defaultOptions,t);return this.each(function(){var t=n(this);t.data("rangebar",i);t.on("mousemove",c);f(t,i.ranges)})};n.fn.rangeBar.defaultOptions={min:0,max:100,ranges:[],label:function(n){return parseInt(n.start)+"-"+parseInt(n.end)},allowDelete:!0,deleteTimeout:3e3};n.fn.rangeBar.defaultRange={start:0,end:0,disabled:!1,css:"",canOverlap:!1}})(jQuery),function(n){n.fn.pointOverlaps=function(t,i){var r=[],u=i||isOverlapRect;return this.each(function(){var i=this,e=n(i),f=getRect(this);n.each(t,function(){var n=this,e=getRect(n),t=u(f,e);t.isOverlaped&&r.push({src:i,obstacle:n,overlap:t})})}),r};n.fn.pointOverlapsX=function(n){return this.pointOverlaps(n,isOverlapXRect)};n.fn.pointOverlapsY=function(n){return this.pointOverlaps(n,isOverlapYRect)};n.fn.overlaps=function(t,i){var r=[],u=i||isOverlapRect;return this.each(function(){var i=this,e=n(i),f=getRect(this);n(t).each(function(){var t=this,o=n(t),s=getRect(o),e=u(f,s);e.isOverlaped&&r.push({src:i,obstacle:t,overlap:e})})}),r};n.fn.overlapsX=function(n){return this.overlaps(n,isOverlapXRect)};n.fn.overlapsY=function(n){return this.overlaps(n,isOverlapYRect)}}(jQuery);